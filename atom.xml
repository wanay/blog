<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wanayhtun]]></title>
  <link href="http://wanay.github.io/blog/atom.xml" rel="self"/>
  <link href="http://wanay.github.io/blog/"/>
  <updated>2014-11-05T06:19:27+06:30</updated>
  <id>http://wanay.github.io/blog/</id>
  <author>
    <name><![CDATA[Wanayhtun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim and Plugins]]></title>
    <link href="http://wanay.github.io/blog/vim-and-plugins/"/>
    <updated>2014-10-21T11:15:25+06:30</updated>
    <id>http://wanay.github.io/blog/vim-and-plugins</id>
    <content type="html"><![CDATA[<p>Vim မှာ Plugin တွေ install လုပ်ရတာနည်းနည်းတော့ အလုပ်ရှုပ်ခက်ခဲပါတယ်။ခက်ခဲတယ်ဆိုလို့ သိပ်စိတ်မပျက်သွားပါနဲ့အုံး လွယ်လွယ်ကူကူ install လုပ်နိုင်ဖို့နဲ့ plugin manager တွေရှိပါတယ်။Vim မှာ Sublime text ရဲ့ package control လိုမျိုး official plugin manager တွေမရှိပါဘူး။အစပိုင်းမှာ Vim မှာ plugin သွင်းဖို့ဆိုတာတော်တော်ခေါင်းရှုပ်စရာပါ။Plugin တွေကို vim folder ထဲမှာသွားထား နောက် vimrc မှာ သွားပြင် ပြီးတော့ compress လုပ်ထားတဲ့ format တွေကလည်း vimball(vba) အစရှိသဖြင့်မျိုးစုံတာမို့ အလုပ်တွေပိုစေပါတယ်။။ဒါတွေကိုအဆင်ပြေစေဖို့ Tim Pope က pathogen ဆိုတဲ့ plugin manager ကိုဖန်တီးခဲ့တာကြောင့် plugin တွေ install လုပ်ဖို့အရင်တုန်းကလိုခေါင်းကိုက်စရာတွေမရှိတော့ပါဘူး။ ဒါပေမယ့်အခုနောက်ပိုင်းမှာတော့ pathogen လိုမျိုး vundle ၊ neobundle နဲ့ vam Plugin ကိုလည်းလူသုံးများလာပါတယ်။ဒီမှာတော့ pathogen ကိုသုံးပြီး plugin တွေဘယ်လို install လုပ်သလဲဆိုတာကိုပဲ ပြောပါမယ်။အရင်ဆုံး Terminal ကိုဖွင့်လိုက်ပါ။Home directory ဟုတ်မဟုတ်သေချာ အောင်စစ်ကြည့်ပါ။သေချာရင်တော့</p>

<figure class='code'><figcaption><span>create .vim directory </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir .vim</span></code></pre></td></tr></table></div></figure>


<p>
ဆိုပြီး .vim ဆိုတဲ့ directory တစ်ခုတည်ဆောက်လိုက်ပါ။ပြီးရင် တော့ <code>cd .vim </code> လို့ရိုက်ပြီး .vim directory ထဲကိုဝင်လိုက်ပါ။နောက်ထပ်</p>

<figure class='code'><figcaption><span>create autoload folder </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir autoload</span></code></pre></td></tr></table></div></figure>


<p>လို့ရိုက်ပြီး autoload ဆိုတဲ့ folder တစ်ခုတည်ဆောက်လိုက်ပါ။.vim directory ထဲမှာပဲ နောက်ထပ် bundle ဆိုတဲ့ folder တစ်ခုနောက်ထပ်တည်ဆောက်ပါအုံးမယ်</p>

<figure class='code'><figcaption><span>create bundle folder </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir bundle</span></code></pre></td></tr></table></div></figure>


<p> ဒါဆိုရင်တော့ .vim directory ထဲမှာ <code>ls</code> လို့ရိုက်ကြည့်လိုက်တာနဲ့ autoload နဲ့ bundle ဆိုတဲ့ folder နှစ်ခုရှိသွားပါပြီ။ဒါဆိုရင်
<code>cd ..</code> ရိုက်ပြီး Home Directory ကိုပြန်သွားပါမယ်။ပြီးရင်တော့ အခုလိုရိုက်လိုက်ပါ။</p>

<figure class='code'><figcaption><span>pathogen git clone </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl Sso ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/master /autoload/pathogen.vim</span></code></pre></td></tr></table></div></figure>


<p>ဒါဆိုရင် pathogen ကိုသွင်းပြီးသွားပါပြီ။ဒါပေမယ့် .vimrc မှာလုပ်စရာနည်းနည်းတော့ကျန်ပါသေးတယ်။ Terminal မှာ vim လို့ရိုက်လိုက်ပြီး vim ကိုဖွင့်လိုက်ပါ။ vim ထဲရောက်သွားရင်တော့ <code>:e $MYVIMRC </code> လို့ရိုက်ပြီး enter နှိပ်လိုက်ရင် vimrc file ပွင့်လာပါမယ်။အဲဒီမှာ insert mode ပြောင်းပြီး <code> call pathogen#infect() </code>ရိုက်ပါ။ပြီးသွားရင်တော့ <code>Esc </code> နဲ့ <code> command mode </code> ပြောင်းပြီး
<code>:so % </code> ရိုက်လိုက်တာနဲ့ pathogen ကိုသွင်းတာပြီးပါပြီ။နောက်ပိုင်းကျွန်တော်တို့ သွင်းသမျှ plugin တွေကို pathogen က autoload လုပ်ပေးပါလိမ့်မယ်။အခုကျွန်တော်တို့ plugin manager ကိုတော့သွင်းပြီးသွားပြီနောက်ထပ် vim မှာလူသုံးအများဆုံး plugin တစ်ခုဖြစ်တဲ့ NERDTree ဆိုတာကိုသွင်းပါမယ်။အဲဒါကြောင့် Terminal မှာ Home Directory ကနေ အပေါ်မှာတုန်းကတည်ဆောက်ခဲ့တဲ့ bundle folder ထဲကိုသွားပါမယ်။       <code>cd .vim/bundle </code> ပြီးရင်တော့ NERDTree ကို github ကနေ clone လုပ်ပါမယ်။</p>

<figure class='code'><figcaption><span>NERDTree git clone </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/scrooloose/nerdtree.git</span></code></pre></td></tr></table></div></figure>


<p>ဒါဆိုရင် NERDTree သွင်းပြီးသွားပါပြီ။အခုနောက်ထပ် NERDTree ကိုဘယ်လိုအသုံးချရမလဲဆိုတာနည်းနည်းလောက်ပြောပါမယ်။ vim မှာတစ်ခြား Text editor တွေလိုမျိုး sidebar view မပါပါဘူး။အဲဒါကြောင့် file တွေတစ်ခုကနေနောက်တစ်ခုပြောင်းဖွင့်ဖို့အဆင်မပြေပါဘူး။ဒါပေမယ့် ဒီကိစ္စကိုဖြေရှင်းပေးဖို့ NERDTree ရှိပါတယ်။vim ရဲ့ command mode မှာ <code>:NERDTreeToggle</code> လို့ရိုက်ပြီး enter နှိပ်လိုက်တာနဲ့ဘေးမှာ sidebar ပေါ်လာပါလိမ့်မယ်။ဒါပေမယ့်တစ်ခုကျန်ပါသေးတယ် ဘေးမှာတော့ sidebar ကြီးမြင်နေရပြီ ဒါပေမယ့် file တွေ folder တွေကိုဘယ်လိုသွားဖွင့်မလဲ ခက်တာပဲ mouse နဲ့လည်းသွားနှိပ်လို့မရဘူး။ဘယ်လိုကြီးတုန်းဟ စိတ်မပူပါနဲ့ ကီးဘုတ်ကနေ ctrl key နဲ့ ww ကိုနှိပ်ပြီး ပြောင်းလို့ရပါတယ်။ပြောရမယ်ဆိုရင် ဒါကလည်း vim ရဲ့အားသာချက်တစ်ခုပါပဲ။ကီးဘုတ်ကနေ mouse ကိုသွားသွားကိုင်နေရတာ ပျင်းတဲ့သူတွေအတွက်တော့ အဆင်ပြေတာပေါ့။ဒီတစ်ခုတင်ပဲလားဆိုတော့မဟုတ်သေးပါဘူး ကျွန်တော်တို့ project directory ထဲက folder တစ်ခုမှာ file အသစ်တည်ဆောက်ချင်တယ်ဆိုပါတော့ folder မှာ mouse နဲ့ right click သွားနှိပ် new file ဆိုပြီး တည်ဆောက်ရပါမယ်။vim မှာတော့အဲလိုမဟုတ်ပါဘူး folder မှာ ကီးဘုတ်က <code>m</code> ကိုနှိပ်လိုက်တာနဲ့ vim ရဲ့အောက်ခြေနားမှာ NERDTree menu ပေါ်လာပါလိမ့်မယ်။</p>

<figure class='code'><figcaption><span>NERDTree menu </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>>(a)dd new child node
</span><span class='line'>  (m)ove the current node
</span><span class='line'>  (d)elete the current node
</span><span class='line'>  (c)opy the current node</span></code></pre></td></tr></table></div></figure>


<p>ထွေထွေထူးထူးမဟုတ်လို့နားလည်ပါလိမ့်မယ်။ဒါပေမယ့် တစ်ခုထူးခြားတာက node ပါ။တစ်ကယ်လို့ ကျွန်တော်တို့က file တစ်ခုအသစ်တည်ဆောက်ချင်တယ်ဆိုရင်<code> a </code> ကိုနှိပ်ပါ။ပြီးရင်တော့ကိုယ်တည်ဆောက် လိုတဲ့နာမည်ကို extension ပါထည့်ပေးရပါမယ်။ဥပမာ <code>index.html</code> ဒါဆိုရင်တော့ <code>index.html</code> ဆိုတဲ့ file တစ်ခုတည်ဆောက်ပြီးပါပြီ။တစ်ကယ်လို့ နာမည်ပေးတဲ့နေရာမှာ <code>index </code>လို့ပဲပေးခဲ့မယ်ဆိုရင်တော့ <code>index</code> ဆိုတဲ့ folder တစ်ခုတည်ဆောက်ပေးသွားပါလိမ့်မယ်။တစ်ခြား ကျန်တာတွေတော့ကိုယ့်ဘာသာ ဆက်လေ့လာ ကြည့်ကြပါ။vim မှာ တစ်ခြား text editor တွေမှာလိုပဲ <code>ctrl p</code> နဲ့ file တွေရှာဖို့အတွက် <code>CtrlP plugin </code> ဆိုတာ ရှိပါတယ်။နောက်ထပ် လူသုံးမျာတာကတော့ <code>vim-colors-solarized</code> theme ပါ။Developer တော်တော်များများလည်း အကြိုက်တွေ့တဲ့ theme တစ်ခုပါ။ Ruby on Rails သမားအတွေအတွက်ကတော့ <code>vim-ruby </code>နဲ့<code> vim-rails </code> ဆိုတဲ့ plugin တွေရှိပါတယ်။နောက်ထပ်အနေနဲ့ <code>TDD(Test Driven Devlopment)</code> အတွက် <code>vim-rspec</code> ဆိုတာလည်းရှိပါသေးတယ်။အခုတော့ဒီလောက်နဲ့ နားပါအုံးမယ်။</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Ruby]]></title>
    <link href="http://wanay.github.io/blog/hello-ruby/"/>
    <updated>2014-10-05T04:58:15+06:30</updated>
    <id>http://wanay.github.io/blog/hello-ruby</id>
    <content type="html"><![CDATA[<p>Ruby ကိုမလေ့လာခင်တစ်ခြားလိုအပ်ချက်တွေ အများကြီးမရှိပါဘူး။HTML, CSS နဲ့ Javascript ကိုသိထားရင်စပြီးလေ့လာလို့ရပါပြီ။Ruby က Object Oriented Scripting language တစ်ခုဖြစ်ပါတယ်။Ruby ကို 2003 ခုနှစ်လောက်မှာ ဂျပန်လူမျိုး Yukihiro Matsumoto ကစတင်ပြီးဖန်တီးခဲ့ပါတယ်။သူ့ကိုတော့ Online မှာ Matz လို့လူသိများပါတယ်။ဒါပေမယ့်လည်း စစခြင်းမှာ Ruby က ဒီလောက်နာမည်မကြီးခဲ့ပါဘူး။PHP နဲ့ ASP နဲ့ကသာ Web ကိုအဓိကကြီးစိုးနေခဲ့တာပါ။2004 ခုနှစ်လောက်မှာတော့ David Heinemeir Hansson က အခုလူသိများကြတဲ့ Rails ဆိုတဲ့ Framework ကိုစတင်ဖန်တီးခဲ့ပါတယ်။Rails ဆိုတာက Ruby programming language ကိုအသုံးချပြီးဖန်တီးထားတဲ့ Ruby Framwork တစ်ခုပါ။Rails ရဲ့ MVC architecture ဟာအရမ်းကိုအောင်မြင်ခဲ့ပြီးနောက်ပိုင်းမှာ PHP Framework တစ်ချို့နဲ့ ASP ကပါပြန်ပြီးအတုယူခဲ့ကြရပါတယ်။အခုဆို PHP မှာနာမည်ကြီးနေတဲ့ Framework တစ်ခုဖြစ်တဲ့ Laravel ကလည်း Rails ကိုတုပဖန်တီးထားပါသေးတယ်။Ruby ရဲ့အားသာချက်က ရေးရတာ ပေါ့ပါးလွယ်ကူတာကြောင့် web application တစ်ခုကိုမြန်မြန်ဆန်ဆန်ဖန်တီးနိုင်ပါတယ်။ဒါကြောင့်လည်း Startup တော်တော်များများက Ruby နဲ့စကြတာများပါတယ်။Ruby မှာ Rails အပြင်နောက်ထပ်နာမည်ကြီး Framework ​​တွေရှိပါသေးတယ်။တစ်ချို့က Ruby လို့ဆိုလိုက်တာနဲ့ Rails နဲ့တွဲပြီး Ruby on Rails(ROR)လို့သာအသိများကြပါတယ်။Rails ကတစ်ကယ့်ကိုပြည့်စုံတဲ့ Framework ဆိုပေမယ့် project သေးသေးလေးတွေအတွက်တော့သိပ်အဆင်မပြေပါဘူး။ အဲဒါကြောင့် Sinatra ဆိုတဲ့ Framework ကိုလည်းလူသုံးများကြပါတယ်။အခုနောက်ပိုင်း နာမည်ကြီးနေတဲ့ Node js Framewok တစ်ခုဖြစ်တဲ့ Express js ဆိုရင်လည်း Sinatra ကိုတုပထားပါတယ်။Ruby မှာ Sinatra လိုမျိုးပေါ့ပါးတဲ့ Framework တစ်ခုဖြစ်တဲ့ Roda ဆိုတာကလည်း အခုနောက်ပိုင်း နာမည်ရလာပါတယ်။Ruby Framework တွေကိုမလေ့လာခင် Ruby ကိုအရင်လေ့လာထားမှသာ Rails နဲ့ တစ်ခြား Framework တွေလေ့လာရာမှာလွယ်ကူမှာဖြစ်ပါတယ်။။ဒီတော့ Ruby အရင်ဆုံးလေ့လာဖို့အတွက်စက်မှာ install လုပ်ပါမယ်။ဒီနေရာမှာ windows မှာ install လုပ်တာကိုထည့်မပြောတော့ပါဘူး။တစ်ကယ်တော့ Ruby ကိုစလေ့လာတော့မယ်ဆိုရင် Mac မှာဖြစ်ဖြစ် Linux Distro တစ်ခုခုမှာလေ့လာတာအကောင်းဆုံးပါပဲ။အခုအရင်ဆုံး RVM လို့ခေါ်တဲ့ Ruby Version Manager ကို အရင်ဆုံး install လုပ်ပါမယ်။အဲဒီတော့ Terminal မှာ အခုလိုရိုက်လိုက်ပါ။
 <figure class='code'><figcaption><span>install rvm and ruby </span></figcaption></p>

<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl –sSL https://get.rvm.io | bash –s stable --ruby</span></code></pre></td></tr></table></div>


<p></figure>
အခုဆိုရင်ကျွန်တော်တို့ စက်မှာ rvm နဲ့ ruby ကို install လုပ်ပြီးသွားပါပြီ။ဟမ် အဲလောက်တောင်လွယ်လား ဆိုရင်ဟုတ်ပါတယ်။အဲလောက်ကိုလွယ်ပါတယ်။
<code> ruby –v </code>
လို့ ရိုက်ကြည့်လိုက်ရင် ruby ရဲ့လက်ရှိ version ကိုဖော်ပြပေးပါလိမ့်မယ်။ဒီစာရေးနေတဲ့ အချိန်မှာတော့ ruby stable version ကတော့ 2.1.3 ဖြစ်ပါတယ်။တစ်ကယ်လို့ ကျွန်တော်တို့လက်ရှိ project ကို ruby 2.1.3 နဲ့အလုပ်လုပ် နေချိန်မှာ ruby version တစ်ခုအသစ်ထွက်လာလို့ စမ်းသပ်ချင်ရင်လည်း rvm ကိုသုံးထားတဲ့ အတွက် ruby version တွေကိုအဆင်ပြေပြေနဲ့သုံးနိုင်ပါလိမ့်မယ်။လောလောဆယ် <code> rvm list </code> လို့ရိုက်လိုက်ရင် စက်ထဲမှာသွင်းထားတဲ့ ruby stable version ကိုပြပေးပါလိမ့်မယ်။တစ်ကယ်လို့နောက်ထပ် ruby version တွေသွင်းချင်ရင်တော့ <code> rvm install (ruby version number) </code> ဆိုပြီးအသစ်တွေသွင်းနိုင်ပါတယ်။ဥပမာ ruby version number ဆိုတာကတော့ <code> rvm install 2.1.2 </code>  ဒါဆိုရင်တော့ ruby version 2.1.2 ကို install လုပ်ပေးပါလိမ့်မယ်။ အခုဆို <code> rvm list </code>လို့ရိုက်လိုက်တာနဲ့ <code> ruby 2.1.2 </code>နဲ့ <code> ruby 2.1.3 </code>ဆိုပြီးပြပေးပါလိမ့်မယ်။ ဥပမာအနေနဲ့ <code> rvm use 2.1.2  </code>ဒါဆိုကျွန်တော်တို့က ruby 2.1.2 ကိုသုံးမယ်လို့ပြောလိုက်တာပါ။<code> ruby –v  </code>ဆိုပြီးရိုက်လိုက်ရင် ruby version က 2.1.2 ဖြစ်နေပါလိမ့်မယ်။ဒါပေမယ့် အခုတော့ကျွန်တော်တို့ 2.1.3 ကိုပဲသုံးမှာဖြစ်တဲ့အတွက် <code> rvm use 2.1.3 </code>လို့ပဲရိုက်လိုက်ပါ။ဒါဆိုရင် <code> ruby –v </code> ဆိုတာနဲ့ ruby version က 2.1.3 ဖြစ်သွားပါပြီ။ဒီနေရာမှာ ကျွန်တော်တို့ rails ကိုအသုံးမပြုသေးပေမယ့်တစ်ခါတည်း install လုပ်ထားခဲ့ပါမယ်။</p>

<figure class='code'><figcaption><span>install rails </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install rails</span></code></pre></td></tr></table></div></figure>


<p>ဒါဆိုရင် တော့ rails ရဲ့နောက်ဆုံး stable version ကို install လုပ်ပေးသွားပါလိမ့်မယ်။အရင်ဆုံး Ruby ကိုစပြီးစမ်းဖို့ Terminal မှာ                           <code> irb </code> လို့ရိုက်လိုက်ပါ။ irb ဆိုတာကတော့ interactive Ruby ကိုဆိုလိုတာပါ။ဒါဆိုရင်ကျွန်တော်တို့ ruby code တွေကိုစပြီးစမ်းလို့ရပါပြီ။Programmer တွေထုံးစံအတိုင်း Hello World! နဲ့ပဲစကြတာပေါ့။သိပ်မခက်ပါဘူး။</p>

<figure class='code'><figcaption><span>hello.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">&gt;&gt;</span><span class="nb">puts</span> <span class="err">“</span><span class="no">Hello</span> <span class="no">World</span><span class="o">!</span><span class="err">”</span>
</span><span class='line'><span class="o">=&gt;</span><span class="err">”</span><span class="no">Hello</span> <span class="no">World</span><span class="o">!</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure>


<p>လို့ရိုက်လိုက်တာနဲ့ Hello World! ဆိုတာကို output ထုတ်ပေးပါလိမ့်မယ်။ Ruby မှာ တစ်ခုခု output ထုတ်ပြချင်တဲ့အခါမှာ puts ကိုသုံးပါတယ်။” “ ကြားထဲကထည့်သမျှကို String data type လို့သတ်မှတ်ပါတယ်။တစ်ကယ်လို့ irb ကနေထွက်ချင်ရင်တော့ quit ပဲဖြစ်ဖြစ် exit ဖြစ်ဖြစ်ရိုက်ပြီး ထွက်လို့ရပါတယ်။</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angularjs Fundamental]]></title>
    <link href="http://wanay.github.io/blog/angularjs-fundamental/"/>
    <updated>2014-09-08T10:32:59+06:30</updated>
    <id>http://wanay.github.io/blog/angularjs-fundamental</id>
    <content type="html"><![CDATA[<p>Anuglar js ဆိုတာကတော့2009 ခုနှစ်မှာ Miško Hevery နဲ့Adam Abrons တို့ကစပြီး Declarative web-applications without server ဆိုပြီး စလုပ်လိုက်တဲ့နောက်Google က support ပေးပြီး MIT လိုင်စင်နဲ့ Opensource အနေနဲ့နာမည်ရလာခဲ့ပါတယ်။Angular ဆိုတာ javascript နဲ့ရေးထားတဲ့ client-sideနည်းပညာတစ်ခုပါ။Angular ကိုသုံးပြီး အရင်ကရှိထားတဲ့ HTML,CSS,Javascript တွေနဲ့Web app တွေကိုအရင်ကထက် ပိုပြီးမြန်မြန်ဆန်ဆန်လွယ်ကူအောင်ဖန်တီးနိုင်လာစေပါလိမ့်မယ်။ရှင်းအောင်ပြောရရင်Angular ဆိုတာက web application တွေကိုဖန်တီးဖို့ Opensource ပေးထားတဲ့ Frameworkတစ်ခုလို့ပဲပြောရပါမယ်။ဒီနေရာမှာ Framework နဲ့ Libraryတွေကိုမရောထွေးစေချင်ပါဘူး။Web app တွေဖန်တီးဖို့အတွက် တစ်ခြား Ember တို့Backbone တို့ကလည်းနာမည်ကြီး Framework တွေပါပဲ။အခုတော့ Angular အကြောင်းပဲဆက်ရရင်Anuglar ကို SPA(Single page application) တွေအတွက်သုံးကြပါတယ်။Angular community  တွေကတော့ ဒီလိုပြောကြပါတယ်။
 “structural framework for dynamic web apps.”   Angular ကိုအများက MVW(Model View Whatever) Framework လို့လည်းခေါ်ကြပါတယ်။Whateverဆိုတာကတော့ MVC(Model View Controller) ပဲဖြစ်ဖြစ် knockout js လို MVVM (Model View View-Model)ဖြစ်ဖြစ်သုံးလို့ရပါတယ်။ဒီနေရာမှာ ထပ်ပြောချင်တာက Client-side MVC နဲ့ Server-side MVC Concept တွေကိုလည်းမရောထွေးစေချင်ပါဘူး။အခုကစလို့လက်တွေ့ပိုင်းကိုပဲဆက်လေ့လာကြည့်ကြပါမယ်။အရင်ဆုံး Localhost မှာစမ်းဖို့ Anuglarjs.org ကိုသွားပြီး Download ယူလိုက်ပါ။အခုလောလောဆယ် Stable Version ကတော့1.2.17 ပါ။လောလောဆယ် စမ်းဖို့အတွက် Minified ကိုရွေးပြီး Download ချလိုက်ပါ။
ဒါဆိုရင်တော့ကျွန်တော်တို့စပြီးစမ်းလို့ရပါပြီ။Ok, စပြီးစမ်းဖို့အတွက်မိမိစိတ်ကြိုက် Text Editorတစ်ခုကိုသုံးပါ။ကျွန်တော်ကတော့ Sublime Text 3 ကိုသုံးပါမယ်။ကျွန်တော်တို့ထုံးစံအတိုင်း Hello World ဆိုတဲ့ Program လေးကနေစပြီးရေးပါမယ်။အဲဒီတော့ အခုလိုရေးလိုက်ပါတယ်။</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Angular Fundamental<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;angular.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">&quot;Ctrl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;h1</span> <span class="na">ng-bind=</span><span class="s">&quot;Hello&quot;</span><span class="nt">&gt;&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;script&gt;</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">Ctrl</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">$scope</span><span class="p">.</span><span class="nx">Hello</span> <span class="o">=</span> <span class="s2">&quot;Hello World!&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>သိပ်ပြီးတော့ထူးထူးဆန်းဆန်းမဟုတ်ပါဘူး။အပေါ်ဆုံးကနေစပြီးပြောရရင် &lsquo;<html ng-app>&rsquo;  ဆိုတာမှာ ကျွန်တော်တို့ angular ကို ဒီ HTML ထဲမှာသုံးပါမယ်ဆိုတာကိုကြေငြာပေးလိုက်တာပါ။နောက် head ထဲမှာ angular ရှိတဲ့နေရာကို ချိတ်ပေးလိုက်ပါတယ်။ဒီစာကိုဖတ်နေတဲ့သူက Javascript အခြေခံကိုနားလည်ပြီးသား ဖြစ်မယ်လို့ထင်ပါတယ်။နောက်ကျွန်တော်တို့ div ထဲမှာ Ctrl ဆိုတဲ့ Controller တစ်ခုဖန်တီးလိုက်ပါတယ်။နာမည်က ကြိုက်တဲ့နာမည်ပေးလို့ရပါတယ်။နောက်ထပ် h1  ထဲမှာ  &lsquo;ng-bind=”Hello”&rsquo;  ဆိုပြီးတော့ data တွေကို bind လုပ်ထားပါတယ်။။နောက်ထပ်Two way data binding တွေဆက်လေ့လာရင် သဘောပေါက်လာပါလိမ့်မယ်။အဲဒါဆိုရင် HTML အပိုင်းကပြီးသွားပါပြီ။နောက်ထပ်Script မှာ Ctrl လို့နာမည်ပေးထားတဲ့ Controller ကို variable အနေနဲ့သတ်မှတ်ပြီး Function တစ်ခုအဖြစ်ကြေငြာလိုက်ပါတယ်။ အဲဒီမှာ $scope ဆိုတာကို Controller နဲ့ View ကိုဆက်စပ်ပေးတယ်လို့အလွယ်မှတ်ထားစေချင်ပါတယ်။နောက်ကျွန်တော်တို့ &lsquo;ng-bind&rsquo; လုပ်ဖို့ Hello လို့နာမည်ပေးထားခဲ့လို့ အခု &lsquo;$scope.Hello&rsquo; ဆိုပြီးကျွန်တော်တို့ Output ပြချင်တဲ့ &lsquo;Hello World!&rsquo; ဆိုပြီးရေးလိုက်ပါတယ်။ဒါဆိုရင်Browser မှာသွားစမ်းကြည့်ရင် Hello World! ဆိုတာကိုမြင်ရပါပြီ။တစ်ချို့ကတော့ အပေါ်မှာရေးထားတဲ့Script ကိုတစ်မျိုးဖြစ်နေနိုင်ပါတယ်။အခုလိုမျိုးရေးလည်းရပါတယ်။</p>

<figure class='code'><figcaption><span>javascript </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script>
</span><span class='line'>      function Ctrl($scope){
</span><span class='line'>          $scope.Hello = "Hello World!";
</span><span class='line'>      }
</span><span class='line'>&lt;/script></span></code></pre></td></tr></table></div></figure>


<p>အခုနောက်ထပ် Two way data binding ကိုဆက်ပြီးလေ့လာကြည့်ကြပါမယ်။</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Angular Fundamental<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;angular.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">&quot;Ctrl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;label&gt;</span>Name: <span class="nt">&lt;label&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;name&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;What&#39;s your name?&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;h1&gt;</span> Hello  !<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;script&gt;</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">Ctrl</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>အပေါ်မှာ ရေးခဲ့တာနဲ့သိပ်ပြီးတော့မကွာပါဘူး။Label တစ်ခုနဲ့ input box တစ်ခုထပ်ထည့်ထားပါတယ်။ကျွန်တော်တို့ input type ကို text လို့ထားပြီးတော့ ng-model မှာ name လို့ကြေငြာလိုက်ပါတယ်။နောက်ထပ် ကျွန်တော်တို့ရိုက်လိုက်တဲ့စာသားတွေပေါ်ဖို့အတွက် h1 tag ကိုသုံးလိုက်ပါတယ်။h1 tag ထဲမှာ Hello ဆိုတာက user ကရိုက်လိုက်တဲ့ နာမည်အရှေ့မှာ ပေါ်စေချင်လို့ရေးထားတာပါ။တစ်ခြားဘာမှမဟုတ်ပါဘူး။နောက်ပြီးတော့ ဆိုတာကတော့ Data bind လုပ်ထားတာပါ။ပထမတုန်းကလိုမျိုး ng-bind ဆိုပြီးမကြေငြာပဲနဲ့Two way data binding အတွက် သုံးထားတာပါ။တစ်ကယ်အလုပ်မလုပ် Browser မှာသွားစမ်းကြည့်ရင်input ထဲကိုဝင်လာသမျှ Data တွေဟာ အောက်က Data bind လုပ်ထားတဲ့ h1 tag ထဲမှာမြင်နေရတာကိုတွေ့ရမှာပါ။
Two waydata binding နဲ့ပတ်သက်လို့ပြောစရာတွေကျန်ပါသေးတယ်။ စာအရမ်းရှည်သွားမှာဆိုးလို့ဒီလောက်နဲ့ပဲနားပါအုံးမယ်။</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Vim]]></title>
    <link href="http://wanay.github.io/blog/hello-vim/"/>
    <updated>2014-09-02T14:33:40+06:30</updated>
    <id>http://wanay.github.io/blog/hello-vim</id>
    <content type="html"><![CDATA[<p><code>Vim</code> လို့ပြောလိုက်တာနဲ့တော်တော်များများက လက်ရှောင်သွားတတ်ပါတယ်။ဟုတ်လည်းဟုတ်ပါတယ် Vim ကိုစက်ထဲသွင်းပြီးသွားတာနဲ့ တစ်ခြား Text Editor တွေ IDE တွေလိုသုံးလို့မရသေးပါဘူး။ဒါဆို ဘာဖြစ်လို့ Vim ကိုသုံးနေကြသလဲ လို့မေးစရာရှိလာတယ်။အခုနောက်ပိုင်းမှာတော့ Sublime text တို့လို Text Editor ကအရမ်းကိုကောင်းလာကြပါပြီ။ဒါပေမယ့် Vim ကိုအခုထက်ထိဆက်ပြီးသုံးနေကြသေးတာလဲဆိုရင် အဓိက က Vim နဲ့ Terminal က လင်မယားဖြစ်နေက တစ်ချက် နောက်တစ်ခုက Movement ပါ။တစ်ကယ့်ကို မြန်မြန်ဆန်ဆန်နဲ့ကိုယ်သွားချင်တဲ့နေရာကို mouse မကိုင်ပဲနဲ့ keyboard မှာတင်အလုပ်ဖြစ်ပါတယ်။File တွေ navigate လုပ်ဖို့ mouse ကိုသွားသွားကိုင်ပြီး Click နေရတဲ့ဒုက္ခက ကင်းဝေးပါလိမ့်မယ်။ဒါကနောက်ပိုင်း အကျင့်ရသွားရင် တစ်ကယ့်ကိုသိသိသာသာကြီး productive ဖြစ်ပါလိမ့်မယ်။နောက်အရေးကြီးတာတစ်ခု Mode ပါ။ Vim မှာdefault က command mode ပါ။တစ်ကယ်လို့ Code တွေစပြီးရေးမယ်ဆိုရင်တော့ keyboard က <code>i</code> ကိုနှိပ်ပြီး <code>Insert mode</code> မှာ Code တွေစရေးလို့ရပါပြီ။တစ်ကယ်လို့ ရေးပြီးခဲ့ရင် keyboard က <code>ESC</code> key ကိုနှိပ်ပြီး Normal mode( Command mode) ကိုပြန်ထွက်နိုင်ပါတယ်။အဲဒီ Command mode မှာဘာတွေလုပ်လို့ရသလဲဆိုရင် File တွေ navigate လုပ်ဖို့နဲ့ cursor ရွေ့ဖို့ File  သိမ်းဖို့ Exit လုပ်ဖို့တွေအတွက်သုံးပါတယ်။အရေးကြီးမှတ်ထားရမှာကတော့ Vim မှာ တစ်ခြား mode ကနေ Command mode ကိုပြောင်းဖို့ အမြဲတမ်း <code>ESC</code> key နှိပ်ပေးရပါမယ်။ဒီနေရာမှာတော့ mode တွေ Movement အကြောင်းအသေးစိတ်မရေးတော့ပါဘူး။အပိုင်း တစ် တို့ နှစ်တို့ရေးလိုက်တာထက်စာရင် တစ်ပိုင်း တစ်ပိုင်းစီခေါင်းစဉ်အလိုက်ရေးလိုက်ရင် လာဖတ်တဲ့သူကသိချင်တဲ့အကြောင်းကိုသာ ရှာဖတ်လိုက်ရင် အချိန်ကုန်သက်သာမယ်ထင်လို့ပါ။နောက်အပိုင်းတွေမှာ တော့ <code>Movement</code>,<code> Mode</code>,<code> Vimrc</code>, <code>install plugin</code> အဲလိုတွေအပိုင်းလိုက် ခွဲရေးမယ်လို့တော့ စိတ်ကူးထားတာပဲ။ :D :D :D   အခုတော့နောက်ဆုံးအနေနဲ့ Vim မှာ save လုပ်တာနဲ့ exit လုပ်တာတွေဆက်ပါအုံးမယ်။ Vim မှာ save လုပ်ဖို့အရမ်းလွယ်ပါတယ်။<code> Ctrl + s </code> လုပ်လိုက်ရင်ရရောလို့တော့ မထင်ပါနဲ့။နောက်ဆုံးရောက်နေတဲ့ <code> Mode</code> က Command mode ဖြစ်ဖို့တော့လိုပါတယ်။မဟုတ်လည်း သေချာအောင် <code>ESC</code> တစ်ချက်လောက် နှိပ်လိုက်ရင်လည်းဖြစ်ပါတယ်။ဒါဆို Command mode မှာသေချာပြီဆိုရင်တော့ <code>:w </code>  လို့ရိုက်လိုက်ရင် save လုပ်သွားမှာပါ။<code>w</code> ဆိုတာက write ကိုဆိုလိုတာပါ ဒါဆိုရင် Vim ကနေထွက်ချင်ရင်ရော လွယ်ပါတယ်။ <code>:q </code>   ဆိုရင်ထွက်သွားမှာပါ။တစ်ကယ်လို့ save ပြီးတော့ ထွက်မယ်ဆိုရင်တော့ <code> :wq </code> လို့ရိုက်လိုက်တာနဲ့အဆင်ပြေမှာပါ။ဒါမှမဟုတ် လက်ရှိဖွင့်ထားတာကို save မလုပ်ပဲ ထွက်ချင်တယ်ဆိုရင်တာ့ <code> :q! </code> လို့ရိုက်လိုက်တာနဲ့ Vim ကနေ save မလုပ်ပဲထွက်သွားမှာပါ။အခုတော့ ဒီလောက်နဲ့ပဲ နားပါအုံးမယ်။</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Javascript]]></title>
    <link href="http://wanay.github.io/blog/hello-javascript/"/>
    <updated>2014-08-29T11:57:35+06:30</updated>
    <id>http://wanay.github.io/blog/hello-javascript</id>
    <content type="html"><![CDATA[<p>Javascript ကို ၁၉၉၅ ခုနစ် မေလ မှာ  <a href="https://brendaneich.com/">Brendan Eich</a> က Netscape web browser အတွက် စတင် တီထွင်ခဲ့ပါတယ်။(အခုတော့ Mozilla ဖြစ်သွားပါပြီ။)စစခြင်းမှာတော့  Mocha လို့နာမည်ပေးခဲ့ပါတယ်။စက်တင်ဘာလောက်မှာတော့ LiveScript ဆိုပြီးနာမည်ထပ် ပြောင်းခဲ့ပါတယ်။အဲဒီနောက် ဒီဇင်ဘာမှာတော့ Sun ရဲ့ လိုင်စင် trademark ကိုယူပြီး Javascript ဆိုပြီးဖြစ်လာ ခဲ့ပါတယ်။Javascript က Object Oriented ဖြစ်တဲ့ Scripting Language တစ်ခုဖြစ်ပါတယ်။ဒီနေရာမှာတော့ အကျယ်မရှင်းတော့ပါဘူး။နောက်အခန်းတွေကျမှ တစ်ဖြည်းဖြည်းနားလည်လာလိမ့်မယ်။ အခုတော့ Hello World  program လေးကနေ ပဲစကြတာပေါ့။Javascript ကို Html ထဲမှာ ထည့်သွင်းအသုံးပြုဖို့</p>

<figure class='code'><figcaption><span>&#8220;javascript&#8221; </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript">
</span><span class='line'>
</span><span class='line'>  /* code here */
</span><span class='line'>
</span><span class='line'>&lt;/script></span></code></pre></td></tr></table></div></figure>


<p> ထဲမှာသုံးပြီးရေးပါတယ်။</p>

<figure class='code'><figcaption><span>&#8220;javascript&#8221; </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript">
</span><span class='line'>
</span><span class='line'>  document.write("Hello World");
</span><span class='line'>
</span><span class='line'>&lt;/script></span></code></pre></td></tr></table></div></figure>


<p>အဲဒါကို run လိုက်ရင် Hello World ဆိုတာကို browser မှာမြင်ရမှာပါ။ ဆိုတာက client ကို output ထုတ်ပြချင်တဲ့အခါမှာသုံးပါတယ်။နောက် javascript code တွေထဲမှာလည်း Html tag တွေထည့်ရေးလို့ရပါတယ်။</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'> <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;title&gt;</span>Hello World<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'> <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;h1&gt;&lt;i&gt;Hello World&lt;/i&gt;&lt;/h1&gt;&quot;</span><span class="p">);</span>
</span><span class='line'> <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>နောက်ပြီးကျွန်တော်တို့ Browser မှာ output ထုတ်ပြတဲ့အခါမှာ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>ချည်းပဲပြပေးလိုက်ရင်လိုင်းတစ်လိုင်းထဲမှာ အများကြီးဖြစ်သွားနိုင်ပါတယ်။အဲဒါကြောင့်</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>ထည့်ပြီးစမ်းကြည့်လိုက်ရင်အခုလိုတွေ့ရမှာပါ။</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'> <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nt">&lt;title&gt;</span>Hello World<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'> <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'> <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;h1&gt;&lt;i&gt;Hello World&lt;/i&gt;&lt;/h1&gt;&quot;</span><span class="p">);</span>
</span><span class='line'> <span class="nb">document</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span><span class="s2">&quot;&lt;h2&gt;Let&#39;s learn javascript happily&lt;/h2&gt;&quot;</span><span class="p">);</span>
</span><span class='line'> <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>အခုလောက်ဆိုသဘောပေါက်လောက်မယ်ထင်ပါတယ်။အခုမှအစဆိုတော့နည်းနည်း ချင်းပဲဆက်သွားကြရအောင်ပါ။ :)</p>
]]></content>
  </entry>
  
</feed>
